// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

package domain_service

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// TODO: explain different types
type DomainServiceRequestRequestType int32

const (
	DomainServiceRequest_DOMAIN_CERT_REQUEST DomainServiceRequestRequestType = 1
	DomainServiceRequest_MANAGE_POLICY       DomainServiceRequestRequestType = 2
	DomainServiceRequest_REVOKE_CERTIFICATE  DomainServiceRequestRequestType = 3
	DomainServiceRequest_GET_CRL             DomainServiceRequestRequestType = 4
)

var DomainServiceRequestRequestType_name = map[int32]string{
	1: "DOMAIN_CERT_REQUEST",
	2: "MANAGE_POLICY",
	3: "REVOKE_CERTIFICATE",
	4: "GET_CRL",
}
var DomainServiceRequestRequestType_value = map[string]int32{
	"DOMAIN_CERT_REQUEST": 1,
	"MANAGE_POLICY":       2,
	"REVOKE_CERTIFICATE":  3,
	"GET_CRL":             4,
}

func (x DomainServiceRequestRequestType) Enum() *DomainServiceRequestRequestType {
	p := new(DomainServiceRequestRequestType)
	*p = x
	return p
}
func (x DomainServiceRequestRequestType) String() string {
	return proto.EnumName(DomainServiceRequestRequestType_name, int32(x))
}
func (x DomainServiceRequestRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *DomainServiceRequestRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DomainServiceRequestRequestType_value, data, "DomainServiceRequestRequestType")
	if err != nil {
		return err
	}
	*x = DomainServiceRequestRequestType(value)
	return nil
}

type DomainServiceRequest struct {
	Type *DomainServiceRequestRequestType `protobuf:"varint,1,opt,name=type,enum=domain_service.DomainServiceRequestRequestType" json:"type,omitempty"`
	// Fields for type: DOMAIN_CERT_REQUEST.
	SerializedHostAttestation []byte `protobuf:"bytes,2,opt,name=serialized_host_attestation" json:"serialized_host_attestation,omitempty"`
	// Fields for type: REVOKE_CERTIFICATE.
	// This is an attestation signed by the policy key with the statement:
	// policyKey says revoke certificateSerialNumber
	SerializedPolicyAttestation []byte `protobuf:"bytes,3,opt,name=serialized_policy_attestation" json:"serialized_policy_attestation,omitempty"`
	XXX_unrecognized            []byte `json:"-"`
}

func (m *DomainServiceRequest) Reset()         { *m = DomainServiceRequest{} }
func (m *DomainServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DomainServiceRequest) ProtoMessage()    {}

func (m *DomainServiceRequest) GetType() DomainServiceRequestRequestType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *DomainServiceRequest) GetSerializedHostAttestation() []byte {
	if m != nil {
		return m.SerializedHostAttestation
	}
	return nil
}

func (m *DomainServiceRequest) GetSerializedPolicyAttestation() []byte {
	if m != nil {
		return m.SerializedPolicyAttestation
	}
	return nil
}

type DomainServiceResponse struct {
	ErrorMessage *string `protobuf:"bytes,1,opt,name=error_message" json:"error_message,omitempty"`
	// Fields for response to DOMAIN_CERT_REQUEST.
	SerializedDomainAttestation []byte `protobuf:"bytes,2,opt,name=serialized_domain_attestation" json:"serialized_domain_attestation,omitempty"`
	// Fields for response to GET_CRL.
	Crl              []byte `protobuf:"bytes,3,opt,name=crl" json:"crl,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DomainServiceResponse) Reset()         { *m = DomainServiceResponse{} }
func (m *DomainServiceResponse) String() string { return proto.CompactTextString(m) }
func (*DomainServiceResponse) ProtoMessage()    {}

func (m *DomainServiceResponse) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *DomainServiceResponse) GetSerializedDomainAttestation() []byte {
	if m != nil {
		return m.SerializedDomainAttestation
	}
	return nil
}

func (m *DomainServiceResponse) GetCrl() []byte {
	if m != nil {
		return m.Crl
	}
	return nil
}

type TrustedEntities struct {
	TrustedProgramTaoNames []string `protobuf:"bytes,1,rep,name=trusted_program_tao_names" json:"trusted_program_tao_names,omitempty"`
	TrustedHostTaoNames    []string `protobuf:"bytes,2,rep,name=trusted_host_tao_names" json:"trusted_host_tao_names,omitempty"`
	TrustedMachineInfos    []string `protobuf:"bytes,3,rep,name=trusted_machine_infos" json:"trusted_machine_infos,omitempty"`
	TrustedRootCerts       [][]byte `protobuf:"bytes,4,rep,name=trusted_root_certs" json:"trusted_root_certs,omitempty"`
	XXX_unrecognized       []byte   `json:"-"`
}

func (m *TrustedEntities) Reset()         { *m = TrustedEntities{} }
func (m *TrustedEntities) String() string { return proto.CompactTextString(m) }
func (*TrustedEntities) ProtoMessage()    {}

func (m *TrustedEntities) GetTrustedProgramTaoNames() []string {
	if m != nil {
		return m.TrustedProgramTaoNames
	}
	return nil
}

func (m *TrustedEntities) GetTrustedHostTaoNames() []string {
	if m != nil {
		return m.TrustedHostTaoNames
	}
	return nil
}

func (m *TrustedEntities) GetTrustedMachineInfos() []string {
	if m != nil {
		return m.TrustedMachineInfos
	}
	return nil
}

func (m *TrustedEntities) GetTrustedRootCerts() [][]byte {
	if m != nil {
		return m.TrustedRootCerts
	}
	return nil
}

func init() {
	proto.RegisterEnum("domain_service.DomainServiceRequestRequestType", DomainServiceRequestRequestType_name, DomainServiceRequestRequestType_value)
}
